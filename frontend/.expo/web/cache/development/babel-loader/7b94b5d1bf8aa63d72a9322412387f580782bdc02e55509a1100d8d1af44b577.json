{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  currentUser: null,\n  token: null,\n  loading: false,\n  error: null\n};\nvar accountSlice = createSlice({\n  name: 'account',\n  initialState: initialState,\n  reducers: {\n    setCurrentUser: function setCurrentUser(state, action) {\n      state.currentUser = action.payload;\n    },\n    setToken: function setToken(state, action) {\n      state.token = action.payload;\n    },\n    setLoading: function setLoading(state, action) {\n      state.loading = action.payload;\n    },\n    setError: function setError(state, action) {\n      state.error = action.payload;\n    },\n    logout: function logout(state) {\n      state.currentUser = null;\n      state.token = null;\n    }\n  }\n});\nvar _accountSlice$actions = accountSlice.actions,\n  setCurrentUser = _accountSlice$actions.setCurrentUser,\n  setToken = _accountSlice$actions.setToken,\n  setLoading = _accountSlice$actions.setLoading,\n  setError = _accountSlice$actions.setError,\n  logout = _accountSlice$actions.logout;\nexport { setCurrentUser, setToken, setLoading, setError, logout };\nexport default accountSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentUser","token","loading","error","accountSlice","name","reducers","setCurrentUser","state","action","payload","setToken","setLoading","setError","logout","_accountSlice$actions","actions","reducer"],"sources":["C:/Users/86151/Desktop/智能生活助手/frontend/src/store/slices/accountSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\n// 用户类型定义\r\nexport interface User {\r\n  id: string;\r\n  username: string;\r\n  email: string;\r\n  phone?: string;\r\n}\r\n\r\n// 状态类型定义\r\ninterface AccountState {\r\n  currentUser: User | null;\r\n  token: string | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\n// 初始状态\r\nconst initialState: AccountState = {\r\n  currentUser: null,\r\n  token: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// 创建账户切片\r\nconst accountSlice = createSlice({\r\n  name: 'account',\r\n  initialState,\r\n  reducers: {\r\n    // 设置当前用户\r\n    setCurrentUser: (state, action: PayloadAction<User | null>) => {\r\n      state.currentUser = action.payload;\r\n    },\r\n    // 设置认证令牌\r\n    setToken: (state, action: PayloadAction<string | null>) => {\r\n      state.token = action.payload;\r\n    },\r\n    // 设置加载状态\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    // 设置错误信息\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n    // 退出登录\r\n    logout: (state) => {\r\n      state.currentUser = null;\r\n      state.token = null;\r\n    },\r\n  },\r\n});\r\n\r\n// 导出actions\r\nexport const { setCurrentUser, setToken, setLoading, setError, logout } = accountSlice.actions;\r\n\r\nexport default accountSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAmB7D,IAAMC,YAA0B,GAAG;EACjCC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAGD,IAAMC,YAAY,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,SAAS;EACfN,YAAY,EAAZA,YAAY;EACZO,QAAQ,EAAE;IAERC,cAAc,EAAE,SAAhBA,cAAcA,CAAGC,KAAK,EAAEC,MAAkC,EAAK;MAC7DD,KAAK,CAACR,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IAEDC,QAAQ,EAAE,SAAVA,QAAQA,CAAGH,KAAK,EAAEC,MAAoC,EAAK;MACzDD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC;IAEDE,UAAU,EAAE,SAAZA,UAAUA,CAAGJ,KAAK,EAAEC,MAA8B,EAAK;MACrDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IAEDG,QAAQ,EAAE,SAAVA,QAAQA,CAAGL,KAAK,EAAEC,MAAoC,EAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IAEDI,MAAM,EAAE,SAARA,MAAMA,CAAGN,KAAK,EAAK;MACjBA,KAAK,CAACR,WAAW,GAAG,IAAI;MACxBQ,KAAK,CAACP,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAGK,IAAAc,qBAAA,GAAmEX,YAAY,CAACY,OAAO;EAA/ET,cAAc,GAAAQ,qBAAA,CAAdR,cAAc;EAAEI,QAAQ,GAAAI,qBAAA,CAARJ,QAAQ;EAAEC,UAAU,GAAAG,qBAAA,CAAVH,UAAU;EAAEC,QAAQ,GAAAE,qBAAA,CAARF,QAAQ;EAAEC,MAAM,GAAAC,qBAAA,CAAND,MAAM;AAA0B,SAAAP,cAAA,EAAAI,QAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,MAAA;AAE/F,eAAeV,YAAY,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}