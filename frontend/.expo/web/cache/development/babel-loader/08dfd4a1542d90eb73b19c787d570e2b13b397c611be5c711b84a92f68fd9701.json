{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  history: [],\n  recommendedContent: [],\n  currentResults: [],\n  tracelessMode: false,\n  loading: false,\n  error: null\n};\nvar searchSlice = createSlice({\n  name: 'search',\n  initialState: initialState,\n  reducers: {\n    setHistory: function setHistory(state, action) {\n      state.history = action.payload;\n    },\n    addSearchRecord: function addSearchRecord(state, action) {\n      if (!state.tracelessMode) {\n        state.history.unshift(action.payload);\n      }\n    },\n    setRecommendedContent: function setRecommendedContent(state, action) {\n      state.recommendedContent = action.payload;\n    },\n    setSearchResults: function setSearchResults(state, action) {\n      state.currentResults = action.payload;\n    },\n    setTracelessMode: function setTracelessMode(state, action) {\n      state.tracelessMode = action.payload;\n    },\n    clearHistory: function clearHistory(state) {\n      state.history = [];\n    },\n    setLoading: function setLoading(state, action) {\n      state.loading = action.payload;\n    },\n    setError: function setError(state, action) {\n      state.error = action.payload;\n    }\n  }\n});\nvar _searchSlice$actions = searchSlice.actions,\n  setHistory = _searchSlice$actions.setHistory,\n  addSearchRecord = _searchSlice$actions.addSearchRecord,\n  setRecommendedContent = _searchSlice$actions.setRecommendedContent,\n  setSearchResults = _searchSlice$actions.setSearchResults,\n  setTracelessMode = _searchSlice$actions.setTracelessMode,\n  clearHistory = _searchSlice$actions.clearHistory,\n  setLoading = _searchSlice$actions.setLoading,\n  setError = _searchSlice$actions.setError;\nexport { setHistory, addSearchRecord, setRecommendedContent, setSearchResults, setTracelessMode, clearHistory, setLoading, setError };\nexport default searchSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","history","recommendedContent","currentResults","tracelessMode","loading","error","searchSlice","name","reducers","setHistory","state","action","payload","addSearchRecord","unshift","setRecommendedContent","setSearchResults","setTracelessMode","clearHistory","setLoading","setError","_searchSlice$actions","actions","reducer"],"sources":["C:/Users/86151/Desktop/智能生活助手/frontend/src/store/slices/searchSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\n// 搜索记录类型定义\r\nexport interface SearchRecord {\r\n  id: string;\r\n  keyword: string;\r\n  timestamp: string;\r\n}\r\n\r\n// 推荐内容类型定义\r\nexport interface RecommendedContent {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  url: string;\r\n  imageUrl?: string;\r\n}\r\n\r\n// 状态类型定义\r\ninterface SearchState {\r\n  history: SearchRecord[];\r\n  recommendedContent: RecommendedContent[];\r\n  currentResults: any[];\r\n  tracelessMode: boolean;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\n// 初始状态\r\nconst initialState: SearchState = {\r\n  history: [],\r\n  recommendedContent: [],\r\n  currentResults: [],\r\n  tracelessMode: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// 创建搜索切片\r\nconst searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState,\r\n  reducers: {\r\n    // 设置搜索历史\r\n    setHistory: (state, action: PayloadAction<SearchRecord[]>) => {\r\n      state.history = action.payload;\r\n    },\r\n    // 添加搜索记录\r\n    addSearchRecord: (state, action: PayloadAction<SearchRecord>) => {\r\n      if (!state.tracelessMode) {\r\n        state.history.unshift(action.payload);\r\n      }\r\n    },\r\n    // 设置推荐内容\r\n    setRecommendedContent: (state, action: PayloadAction<RecommendedContent[]>) => {\r\n      state.recommendedContent = action.payload;\r\n    },\r\n    // 设置搜索结果\r\n    setSearchResults: (state, action: PayloadAction<any[]>) => {\r\n      state.currentResults = action.payload;\r\n    },\r\n    // 设置无痕模式\r\n    setTracelessMode: (state, action: PayloadAction<boolean>) => {\r\n      state.tracelessMode = action.payload;\r\n    },\r\n    // 清空搜索历史\r\n    clearHistory: (state) => {\r\n      state.history = [];\r\n    },\r\n    // 设置加载状态\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    // 设置错误信息\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// 导出actions\r\nexport const {\r\n  setHistory,\r\n  addSearchRecord,\r\n  setRecommendedContent,\r\n  setSearchResults,\r\n  setTracelessMode,\r\n  clearHistory,\r\n  setLoading,\r\n  setError,\r\n} = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AA6B7D,IAAMC,YAAyB,GAAG;EAChCC,OAAO,EAAE,EAAE;EACXC,kBAAkB,EAAE,EAAE;EACtBC,cAAc,EAAE,EAAE;EAClBC,aAAa,EAAE,KAAK;EACpBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAGD,IAAMC,WAAW,GAAGR,WAAW,CAAC;EAC9BS,IAAI,EAAE,QAAQ;EACdR,YAAY,EAAZA,YAAY;EACZS,QAAQ,EAAE;IAERC,UAAU,EAAE,SAAZA,UAAUA,CAAGC,KAAK,EAAEC,MAAqC,EAAK;MAC5DD,KAAK,CAACV,OAAO,GAAGW,MAAM,CAACC,OAAO;IAChC,CAAC;IAEDC,eAAe,EAAE,SAAjBA,eAAeA,CAAGH,KAAK,EAAEC,MAAmC,EAAK;MAC/D,IAAI,CAACD,KAAK,CAACP,aAAa,EAAE;QACxBO,KAAK,CAACV,OAAO,CAACc,OAAO,CAACH,MAAM,CAACC,OAAO,CAAC;MACvC;IACF,CAAC;IAEDG,qBAAqB,EAAE,SAAvBA,qBAAqBA,CAAGL,KAAK,EAAEC,MAA2C,EAAK;MAC7ED,KAAK,CAACT,kBAAkB,GAAGU,MAAM,CAACC,OAAO;IAC3C,CAAC;IAEDI,gBAAgB,EAAE,SAAlBA,gBAAgBA,CAAGN,KAAK,EAAEC,MAA4B,EAAK;MACzDD,KAAK,CAACR,cAAc,GAAGS,MAAM,CAACC,OAAO;IACvC,CAAC;IAEDK,gBAAgB,EAAE,SAAlBA,gBAAgBA,CAAGP,KAAK,EAAEC,MAA8B,EAAK;MAC3DD,KAAK,CAACP,aAAa,GAAGQ,MAAM,CAACC,OAAO;IACtC,CAAC;IAEDM,YAAY,EAAE,SAAdA,YAAYA,CAAGR,KAAK,EAAK;MACvBA,KAAK,CAACV,OAAO,GAAG,EAAE;IACpB,CAAC;IAEDmB,UAAU,EAAE,SAAZA,UAAUA,CAAGT,KAAK,EAAEC,MAA8B,EAAK;MACrDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IAEDQ,QAAQ,EAAE,SAAVA,QAAQA,CAAGV,KAAK,EAAEC,MAAoC,EAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAGK,IAAAS,oBAAA,GASHf,WAAW,CAACgB,OAAO;EARrBb,UAAU,GAAAY,oBAAA,CAAVZ,UAAU;EACVI,eAAe,GAAAQ,oBAAA,CAAfR,eAAe;EACfE,qBAAqB,GAAAM,oBAAA,CAArBN,qBAAqB;EACrBC,gBAAgB,GAAAK,oBAAA,CAAhBL,gBAAgB;EAChBC,gBAAgB,GAAAI,oBAAA,CAAhBJ,gBAAgB;EAChBC,YAAY,GAAAG,oBAAA,CAAZH,YAAY;EACZC,UAAU,GAAAE,oBAAA,CAAVF,UAAU;EACVC,QAAQ,GAAAC,oBAAA,CAARD,QAAQ;AACc,SAAAX,UAAA,EAAAI,eAAA,EAAAE,qBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,QAAA;AAExB,eAAed,WAAW,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}